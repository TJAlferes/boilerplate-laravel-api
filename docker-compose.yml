version: "2.2"

services:

  nginx:
    container_name: nginx-dev
    depends_on:
      - mysql-dev
      - api-dev
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

  mysql-dev:
    command: mysqld --default-authentication-plugin=mysql_native_password
    container_name: mysql-dev
    #Note: This healthcheck test can return false positive, find a better one
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_USER: root
      SERVICE_NAME: mysql-dev
      SERVICE_TAGS: dev
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1
    image: mysql:8.0.19
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - mysql-dev:/var/lib/mysql

  redis-dev:
    container_name: redis-dev
    healthcheck:
      test: redis-cli ping
    image: redis:5.0.5
    ports:
      - "6379:6379"
    volumes:
      - redis-dev:/data

  api-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: api-dev
    depends_on:
      mysql-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    env_file: .env
    #environment:
      #NODE_ENV: development
      #NODE_PATH: /api/node_modules
      #PORT: 3003
    ports:
      - "3003:3003"
    #volumes:
      #- ./app/:/api/app
      #- /node/app/node_modules
  
  composer-dev:
    container_name: composer-dev
    depends_on:
      - api-dev
    image: composer:latest
    volumes:
      - ./src:/var/www/html

  npm:
    container_name: npm
    entrypoint: ['npm']
    image: node:14.5.0
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
  
  artisan:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: artisan
    depends_on:
      - mysql-dev
    entrypoint: ['php', '/var/www/html/artisan']
    working_dir: /var/www/html

volumes:
  mysql-dev:
  redis-dev: